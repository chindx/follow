<?xml version="1.0" encoding="UTF-8"?>
<!-- log4j2使用说明： 使用方式如下： private static final Logger logger = LogManager.getLogger(实际类名.class.getName()); 
	2、日志说明： （1）请根据实际情况配置各项参数 （2）需要注意日志文件备份数和日志文件大小，注意预留目录空间 （3）实际部署的时候backupFilePatch变量需要修改成linux目录 -->
<configuration status="error">
	<Properties>
		<Property name="fileName">front.log</Property>
		<Property name="backupFilePatch">D:/YFC/CrowdFunding/front/</Property>
	</Properties>
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="trace" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!--这个都知道是输出日志的格式 -->
			<PatternLayout
				pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
		</Console>

		<!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFile"
			fileName="${backupFilePatch}${fileName}"
			filePattern="${backupFilePatch}$${date:yyyy-MM}/app-%d{yyyyMMddHHmmssSSS}.log.gz">
			<PatternLayout
				pattern="%d{yyyy.MM.dd 'at' HH:mm:ss.SSS z} %-5level %class{36} %L %M - %msg%xEx%n" />

			<!-- 日志文件大小 -->
			<SizeBasedTriggeringPolicy size="50MB" />
			<!-- 最多保留文件数 -->
			<DefaultRolloverStrategy max="20" />
		</RollingFile>

		<!-- 日志信息输出到文件配置 <RollingRandomAccessFile name="ErrorLog" fileName="${LOG_HOME}/${ERROR_LOG_FILE_NAME}.log" 
			filePattern="${LOG_HOME}/${ERROR_LOG_FILE_NAME}.log.%d{yyyy-MM-dd}.gz"> <PatternLayout 
			pattern="%d %-5p (%F:%L) - %m%n" /> <Policies> TimeBasedTriggeringPolicy指定的size是1，结合起来就是1天生成一个新文件。如果filePattern改成%d{yyyy-MM-dd 
			HH}.gz,此时最小粒度为小时，则每一个小时生成一个文件。 <TimeBasedTriggeringPolicy /> 指定当文件体积大于size指定的值时，触发Rolling 
			<SizeBasedTriggeringPolicy size="100 MB" /> </Policies> 指定最多保存的文件个数 <DefaultRolloverStrategy 
			max="20" /> </RollingRandomAccessFile> <param name="Encoding" value="UTF-8" 
			/> -->

	</appenders>

	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--建立一个默认的root的logger -->
		<Logger name="com.zhiyou100" level="trace" additivity="true">
			<AppenderRef ref="RollingFile" />
		</Logger>

		<logger name="org.springframework.core" level="info">
		</logger>
		<logger name="org.springframework.beans" level="info">
		</logger>
		<logger name="org.springframework.context" level="info">
		</logger>
		<logger name="org.springframework.web" level="info">
		</logger>
		<logger
			name="org.springframework.test.context.junit4.SpringJUnit4ClassRunner"
			level="info">
		</logger>
		<!-- 下面的logger需要修改为你的项目根路径，如com.zhiyou100 -->
		<logger name="com.zhiyou100" level="debug"
			includeLocation="true" additivity="false">
			<!-- <appender-ref ref="ErrorLog" /> -->
			<appender-ref ref="Console" />
		</logger>


		<!-- <Root level="error"> <AppenderRef ref="Console" /> </Root> -->
		<Root level="info" includeLocation="true">
			<AppenderRef ref="Console" />
			<!-- <AppenderRef ref="ErrorLog" /> -->
		</Root>
		<!-- <Root level="warn"> <AppenderRef ref="Console" /> </Root> -->
	</loggers>
</configuration>